# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-07-16 12:06
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessAuthTb',
            fields=[
                ('staff_id', models.IntegerField(db_column='Staff_ID', primary_key=True, serialize=False)),
                ('fingerprint', models.CharField(db_column='FingerPrint', max_length=100)),
                ('seccard_id', models.IntegerField(db_column='SecCard_ID')),
            ],
            options={
                'db_table': 'access_auth_tb',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FirealarmTb',
            fields=[
                ('room_id', models.IntegerField(db_column='Room_ID', primary_key=True, serialize=False)),
                ('is_alarm', models.SmallIntegerField(db_column='Is_alarm')),
            ],
            options={
                'db_table': 'firealarm_tb',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParkingRecordTb',
            fields=[
                ('parkingcard_id', models.IntegerField(db_column='ParkingCard_ID', primary_key=True, serialize=False)),
                ('park_date', models.DateTimeField(db_column='Park_date')),
                ('arrive_time', models.DateTimeField(db_column='Arrive_time')),
                ('leave_time', models.DateTimeField(db_column='Leave_time')),
            ],
            options={
                'db_table': 'parking_record_tb',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParkingsecTb',
            fields=[
                ('blog_id', models.IntegerField(db_column='Blog_ID', primary_key=True, serialize=False)),
                ('rfcard_id', models.IntegerField(db_column='RFCard_ID')),
                ('staff_id', models.IntegerField(db_column='Staff_ID')),
            ],
            options={
                'db_table': 'parkingsec_tb',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PowerStatusTb',
            fields=[
                ('powerblog_date', models.DateTimeField(db_column='PowerBlog_date', primary_key=True, serialize=False)),
                ('main_pow_status', models.SmallIntegerField(db_column='Main_pow_status')),
                ('auxilary_pow_status', models.SmallIntegerField(db_column='Auxilary_pow_status')),
            ],
            options={
                'db_table': 'power_status_tb',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoomEnvdataTb',
            fields=[
                ('room_id', models.IntegerField(db_column='Room_ID', primary_key=True, serialize=False)),
                ('env_date', models.DateTimeField(db_column='Env_date')),
                ('env_info', models.FloatField(blank=True, db_column='Env_info', null=True)),
            ],
            options={
                'db_table': 'room_envdata_tb',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SecurityBlogTb',
            fields=[
                ('area_id', models.IntegerField(db_column='Area_ID')),
                ('access_date', models.DateTimeField(db_column='Access_date', primary_key=True, serialize=False)),
                ('access_cardid', models.IntegerField(db_column='Access_cardID')),
                ('is_correct', models.SmallIntegerField(db_column='Is_correct')),
            ],
            options={
                'db_table': 'security_blog_tb',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatusfeedbackTb',
            fields=[
                ('status_date', models.DateTimeField(db_column='Status_date', primary_key=True, serialize=False)),
                ('fcled_status', models.SmallIntegerField(blank=True, db_column='FCLED_status', null=True)),
                ('ledlight_status', models.SmallIntegerField(blank=True, db_column='LEDLight_status', null=True)),
                ('alarmlight_status', models.SmallIntegerField(blank=True, db_column='AlarmLight_status', null=True)),
                ('alarmbell_status', models.SmallIntegerField(blank=True, db_column='AlarmBell_status', null=True)),
                ('curtain_status', models.SmallIntegerField(blank=True, db_column='Curtain_status', null=True)),
                ('fan_status', models.SmallIntegerField(blank=True, db_column='Fan_status', null=True)),
            ],
            options={
                'db_table': 'statusfeedback_tb',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeatherDataTb',
            fields=[
                ('wea_date', models.DateTimeField(db_column='Wea_date', primary_key=True, serialize=False)),
                ('light', models.FloatField(blank=True, db_column='Light', null=True)),
                ('co2', models.FloatField(blank=True, db_column='CO2', null=True)),
                ('pm_data', models.FloatField(blank=True, db_column='PM_data', null=True)),
                ('tem_data', models.FloatField(blank=True, db_column='Tem_data', null=True)),
                ('ultra_ray', models.FloatField(blank=True, db_column='Ultra_ray', null=True)),
                ('exercise', models.SmallIntegerField(blank=True, db_column='Exercise', null=True)),
            ],
            options={
                'db_table': 'weather_data_tb',
                'managed': False,
            },
        ),
    ]
